# Input variables
# Pattern
variable "variable_name" {}

# String
variable "region" {
  type    = string
  default = "eu-west-3"
}

# Usage: region = var.region

variable "bucket_name" {
  description = "Remote S3 Bucket Name"
  type        = string
  validation {
    condition     = can(regex("^[a-z0-9]{1}[a-z0-9-]{1,61}[a-z0-9]{1}$", var.bucket_name))
    error_message = "Bucket Name must not be empty and must follow S3 naming rules."
  }
}

# List
variable "avail_zones" {
  type    = list(string)
  default = ["eu-west-3a", "eu-west-3b", "eu-west-3c"]
}
# Usage: first_az  = var.avail_zones[0]
#        second_az = var.avail_zones[1]

variable "region_avail_zones" {
  type = map(any)
  default = {
    "eu-west-2" = "eu-west-2a"
    "eu-west-3" = "eu-west-3a"
    "eu-west-2" = "eu-west-2a"
    "eu-west-3" = "eu-west-3a"
  }
}

# Usage: primary_prod_region = var.region_avail_zones["eu-west-2"]
#        second_dr_region    = var.region_avail_zones["eu-west-3"]

# Boolean
variable "multi_region" {
  default = false
}

# Usage: multi_region_deployment = var.multi_region

# CMD Line Arg: terraform apply -var variable_name="value"

# Output variables
/* resource "aws_vpc" "tfVPC" {
     cidr_block = var.vpc_cidr
     tags = var.vpc_tags
} */

output "vpc_id" {
  value = aws_vpc.tfVPC.id
}
